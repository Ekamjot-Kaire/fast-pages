{
  
    
        "post0": {
            "title": "JavaScript Notes",
            "content": "Function: console.log(): . string can be added into the brackets | the function outputs a message to the web console | only a single string can be inputted into function | . console.log(&quot;hello!&quot;) . hello! . Setting a variable: . &quot;var msg = &quot; captures data of the string (variable of string) | console.log shows output | . //defining variable var msg = &quot;example message&quot;; //logging message console.log(msg) . example message . Defining functions: . the following code has two steps: defining the function and calling the function | . //defining function function logIt(output) { console.log(output); } //calling function logIt(msg); . example message . JavaScript as a Dynamic (loosely typed) language: . dynamic/loosely typed means you don&#39;t have to specify what type of information will be stored in a variable beforehand | the variable type is determined while the code is running, which is similar to Python | . //string: console.log(&quot;hello&quot;) //number: console.log(22) //generic object: array (similar to python list) console.log([1,2,3]) . hello 22 [ 1, 2, 3 ] .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/10/05/javascriptusage.html",
            "relUrl": "/2022/10/05/javascriptusage.html",
            "date": " • Oct 5, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 1.4 - Identifying and Correcting Errors",
            "content": "Video 1: . 4 types of errors: . 1) logic error – mistake in an algorithm where it behaves in an unintended way 2) syntax error – mistake where rules of program arent followed . this could be a typo, or a missing character/line | common examples: forgetting colons, parenthesis/curly or square braces, indentations, quotes.. 3) run-time error – error that comes up while the program is running | program starts to run but then crashes and can not finish | also known as a bug | may happen because of dividing by 0, inappropriately entered data type (a number instead of a word), or other types 4) overflow error – error that happens when the computer tries to run a number outside defined range of values | because of memory constraints, some numbers are too big for a program to handle (imagine a calculator that has only a 4 digit display – 100*100 would not be able to be displayed) | . -&gt; errors will always happen when coding no matter what, and should be an expected part of programming -&gt; good programers can identify what type of error it is and act accordingly . Video 2: . good ways to find and correct errors: . test cases | hand tracing | visualizations | debuggers | adding extra output statements | . what to do once an error has been found: . -&gt; easiest error to correct is a syntax error – traceback info states which line the error is happening (though sometimes a little more searching is needed) . -&gt; logic errors are much more difficult – in this case, test cases are helpful . test cases: using specific, varying inputs to test whether the input works, and to find where the problem is | . grade &lt;– INPUT(“enter a grade”) if (grade &gt; 89) { DISPLAY (“A”) } if (grade &gt; 79) { DISPLAY (“B”) }… etc . good test cases would be numbers within those intervals – also consider: would decimals work? What about negative numbers? . Hand tracing (most useful for loops): writing out the values of the variables of a loop as the loop iterates . useful for a loop that repeats a small number of times | larger loops need a debugging program | . Adding extra output statements: . used to help find errors | once the error is corrected, the extra output statements are usually removed | similar to hand tracing but makes computer do most of the work | . If all the above strategies fail: . visuals and debuggers can sometimes be used | visualizations: graphs, images, colors (or anything else that can be seen) that can show whether or not the program is working | debuggers: software designed to test programs – can be paused in the middle of running to test whether that section is working correctly | .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/10/05/1.4notes.html",
            "relUrl": "/2022/10/05/1.4notes.html",
            "date": " • Oct 5, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 1.3 - Program Design",
            "content": "Video 1: . –&gt; Starting the development of a program: . it starts w/ an idea | you need to have a specific purpose in mind when creating the program – what do you want the program to accomplish? | . (sometimes development changes based on what happens during the process (whether good or bad) . –&gt; Developers then start investigating the problem/purpose: . set requirements for what the program must do | find and understand constraints (lack of tools, time…) | understand interests of user | . ways of investigating include surveys, user testing, observations, interviews . –&gt; After investigation: developers begin brainstroming: . draw a storyboard | planning user experience | lay out user interface (how will the user interact w/ the program) | organizing/dividing work | find a way to test the program | . –&gt; Program requirements – how should the program behave?: . list of users interactions so that they know what they can actually do w/ the program | create prototype of program – an incremental process is usually used to test/refine small parts to make sure they work before putting everything together | . –&gt; Testing: . testing must happen at every step of the way | Testing must happen at the - micro level: make sure each part works as its supposed to - macro: do all the individual parts interact correctly? | refine and revise | . Video 2: . Program development is rarely done alone; instead there are usually teams of ppl (some teams include a few ppl while others could include hundreds) | usually there are multiple people/teams that work on individual components | everyone must get credit for their work – their names have to written in the documentation of the program | make sure to credit partners | for some languages you also use comments within the program to give credit – w/ comments, development teams can find out who can/should fix a problem that shows up . | many times developers use code segments, algorithms, and procedures done by others – if someone already invented it you don’t have to develop the same thing again | however, even if they are not part of your team you must credit them: include authors name and source of any code used | sort of like a works cited | . Video 3: . programers use somethign called program documentation to: . describe overall program | list specific functions of program | describe specific functions or code segments of program | list events and outputs | how others can interact with program | list contributers and other developers of program | . documentation happens: . at the beginning: list specifications | while programming to keep track of progress and issues | after to explain the overall process | . good documentation can improve: . efficiency | ability to fix issues/refine the program | response to bugs | . how to programmers document while programing: . most languages allow comments | comments are txt written within the program that are not executed and don’t affect the program | they are only for developers; computers skip over comments and they are not shown on actual product | comments can be useful when working w/ others, or even for yourself | . examples of comments: . python: # comments are written after the pound sign | java: // comments can be written on a single line using double / for multiple lines they must be done w /* on both sides of comment | javascript, c++ have comments similar to java | HTML uses comments like this: &lt;exclamation mark–comment–&gt; | .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/09/30/1.3notes.html",
            "relUrl": "/2022/09/30/1.3notes.html",
            "date": " • Sep 30, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "JavaScript Table",
            "content": "// define a function to hold data for a Person function Person(name, ghID, job) { this.name = name; this.ghID = ghID; this.job = job; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, job: this.job, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr Yeung&quot;, &quot;jm1021&quot;, &quot;none&quot;); teacher.setRole(&quot;Teacher&quot;); . // defining team var team = [ new Person(&quot;Ishi&quot;, &quot;Random-IGN&quot;, &quot;Frontend Developer&quot;), new Person(&quot;Shreyas&quot;, &quot;Henerystone&quot;, &quot;Scrum Master&quot;), new Person(&quot;Lily&quot;, &quot;lwu1822&quot;, &quot;Backend Developer&quot;), new Person(&quot;Ekam&quot;, &quot;Ekamjot-Kaire&quot;, &quot;DevOps&quot;) ]; // define a classroom and build Classroom objects and json function Classroom(teacher, team){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each team member to Classroom this.team = team; this.team.forEach(team =&gt; { team.setRole(&quot;Team&quot;); this.classroom.push(team); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and team members compsci = new Classroom(teacher, team); . Classroom { teacher: Person { name: &#39;Mr Yeung&#39;, ghID: &#39;jm1021&#39;, job: &#39;none&#39;, role: &#39;Teacher&#39; }, classroom: [ Person { name: &#39;Mr Yeung&#39;, ghID: &#39;jm1021&#39;, job: &#39;none&#39;, role: &#39;Teacher&#39; }, Person { name: &#39;Ishi&#39;, ghID: &#39;Random-IGN&#39;, job: &#39;Frontend Developer&#39;, role: &#39;Team&#39; }, Person { name: &#39;Shreyas&#39;, ghID: &#39;Henerystone&#39;, job: &#39;Scrum Master&#39;, role: &#39;Team&#39; }, Person { name: &#39;Lily&#39;, ghID: &#39;lwu1822&#39;, job: &#39;Backend Developer&#39;, role: &#39;Team&#39; }, Person { name: &#39;Ekam&#39;, ghID: &#39;Ekamjot-Kaire&#39;, job: &#39;DevOps&#39;, role: &#39;Team&#39; } ], team: [ Person { name: &#39;Ishi&#39;, ghID: &#39;Random-IGN&#39;, job: &#39;Frontend Developer&#39;, role: &#39;Team&#39; }, Person { name: &#39;Shreyas&#39;, ghID: &#39;Henerystone&#39;, job: &#39;Scrum Master&#39;, role: &#39;Team&#39; }, Person { name: &#39;Lily&#39;, ghID: &#39;lwu1822&#39;, job: &#39;Backend Developer&#39;, role: &#39;Team&#39; }, Person { name: &#39;Ekam&#39;, ghID: &#39;Ekamjot-Kaire&#39;, job: &#39;DevOps&#39;, role: &#39;Team&#39; } ], json: [ &#39;{&#34;name&#34;:&#34;Mr Yeung&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;job&#34;:&#34;none&#34;,&#34;role&#34;:&#34;Teacher&#34;}&#39;, &#39;{&#34;name&#34;:&#34;Ishi&#34;,&#34;ghID&#34;:&#34;Random-IGN&#34;,&#34;job&#34;:&#34;Frontend Developer&#34;,&#34;role&#34;:&#34;Team&#34;}&#39;, &#39;{&#34;name&#34;:&#34;Shreyas&#34;,&#34;ghID&#34;:&#34;Henerystone&#34;,&#34;job&#34;:&#34;Scrum Master&#34;,&#34;role&#34;:&#34;Team&#34;}&#39;, &#39;{&#34;name&#34;:&#34;Lily&#34;,&#34;ghID&#34;:&#34;lwu1822&#34;,&#34;job&#34;:&#34;Backend Developer&#34;,&#34;role&#34;:&#34;Team&#34;}&#39;, &#39;{&#34;name&#34;:&#34;Ekam&#34;,&#34;ghID&#34;:&#34;Ekamjot-Kaire&#34;,&#34;job&#34;:&#34;DevOps&#34;,&#34;role&#34;:&#34;Team&#34;}&#39; ] } . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;background:black;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Type:&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.job + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDRoleType: . Mr Yeung | jm1021 | none | Teacher | Ishi | Random-IGN | Frontend Developer | Team | Shreyas | Henerystone | Scrum Master | Team | Lily | lwu1822 | Backend Developer | Team | Ekam | Ekamjot-Kaire | DevOps | Team | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/09/28/javascipt-table.html",
            "relUrl": "/2022/09/28/javascipt-table.html",
            "date": " • Sep 28, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Unit 1.2 - Program Purpose",
            "content": "Video 1 . Computing Innovations: . Applications: games, social media, etc | Physical devices: computers, phones, etc | Systems: e-commerce (online shopping), cloud services, e-mail | . smart “things”: anything that can communicate with your computer – smart phones, watches, doorbells, refrigerator, insulin detectors, etc . Guiding questions for when you’re innovating for a purpose: 1) Why does the computing innovation exist? 2) What problem(s) does the innovation solve? 3) What does the innovation allow us to do that we couldnt do before? . Examples: . Social media: Why does it exist? – as a form of communication, entertainment, news, archiving . What problems does it solve? – keeping up with friends who live a long distance apart was difficult and inconvenient . What does the innovation allow us to do? – quickly and efficiently keep tabs w/ friends; find out news and other peoples opinions on it; track progress easier . | Online shopping: Why does it exist? – to make shopping more convenient and available for everyone . What problems does it solve? – it allows people to shop when they might not have time or transportation; . What does the innovation allow us to do? – shop internationally, shop w/out having to leave our homes . | . Video 2 . input: data sent to a computer to be processed by a program | event: an action that gives input data to a program – can be generated when a key is pressed, a button is clicked, a program is started, etc | inputs (usually) affects the output of program | output is data sent from a program to a device | . types of inputs: . tactile (touch) | audio | visual | text (including numbers) | . example: smart phone/tablet: . touch screen: tactile – how you touch, where you touch, movements | physical buttons | audio: you can say things to your phone | visual: facial recognition | . how do programs receive input?: . programs are written in an event driven program | events are triggered by actions, and these actions usually send input to program | different types of “events” a user can trigger: button click, taps/swiping, keyboard entries, audio triggers | . input might not always affect output: if a phone is off clicking a button does nothing. You have to follow the correct sequence of events . types of outputs produced by device: . visual | audio | text | . how does a program know what to do when an event takes place?: . actions done by the user or another program can trigger events | program “jumps” to code segment related to specific events – code segment is executed and output is given | program is not necessarily executed in order that the lines are written in | . Video 3: . what is a program (also called software)? a program is a collection of statements: . statement: a single command code segment: group of statements – these statements are executed according to program rules . example: . min &lt;– alist[1] for EACH item in alist { IF (item &lt; min) { min &lt;– item } } DISPLAY (“The minimum number in the list is”) DISPLAY min . explanation: The code starts at item 1 in alist and assigns it to min. Then, for each number in the list after 1, if the number is less than min, it assigns the new number as min. At the end it prints the min # . what does this program do? . finds the minimum value in the list | . looking at the purpose, we have to find potential issues: . program would need to work for lists with #s out of order | what about negative numbers (should it take them into account?) | very large numbers; some languages might not allow large #s | decimals; some languages store decimals as a different type (not int) | . when describing code segment: . explain what it does so that others can insert it into larger programs | you could include how it does what it does (somebody might want to expand on it) | .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/09/27/1.2notes.html",
            "relUrl": "/2022/09/27/1.2notes.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Unit 1.1 - Collaboration",
            "content": "Video 1: . Collaboration can bring together people who specialize in different skills, so that everyone can show their strengths, and supported with their weaknesses | Working together brings new perspectives on a project | . Computing Innovation: . includes a program | physical computing innovations (self-driving car) | nonphysical computing concept (e-commerce) | . Super Mario Bros 2 vs 3 example: . collaboration brings fresh ideas | removes bias and provides more opinions | . Skills learned through collaboration: . Communication | Consensus building | Conflict Resolution | Negotiation | . Video 2: . Pair Programming: . driver: writes code | observer: reviews code as its being written (don’t be pushy and let the driver figure things out) | . Think-Pair-Share: . Think through the problem by yourself | Pair up and share ideas to fix the problem | Share with the class | . Comments: . Leave comments in your code to communicate with your partner | Store your own ideas and train of thought | Credit code used from other sources | Credit media used from other sources | Differentiate what you and your partner did | Say what the code is doing | . Online tools: . repl.it: shared workspace | github: collaboration + repositories (other people can comment) | ask people to give feedback | .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/09/25/collabnote.html",
            "relUrl": "/2022/09/25/collabnote.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Title",
            "content": "",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/09/12/csp-performance-task-planning.html",
            "relUrl": "/2022/09/12/csp-performance-task-planning.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "App Lab Quiz Outline",
            "content": "App Lab Quiz Outline . Person A: Ishi Person B: Ekam . Introduction Page . 2 people must be playing this quiz together, Person A and Person B | Person B must have their screen hidden form Person A and vice versa | Each Person must take turns to DESCRIBE their image, they can’t directly tell what it is | Both players need to answer before moving on to the next question | Questions: . (Person A: me, Person B: Ishi) . Person A has a giraffe on their screen Person B has a Toucan on theirs | “What animal is on your partner’s screen?” . Person A has the cover of the song “Royals” by Lorde Person B has the cover of the song “I Love It” by Icona Pop . “What song is shown on on your partner’s screen?” . | Person A has an image of various colored circles Person B has an image of differently colored circles . “What is the color of the largest circle on your partner’s screen?” . | # General Quiz Plan: . Introduction screen (screen 2): | Has a button to start the quiz: uses onEvent to set the screen to the next page . Instructions: lists special instructions (since this is a partner quiz) | Has another button with onEvent to set screen to first question . Question 1: | Three buttons with possible answers. Incorrect Answers lead you to page 6 (“incorrect” screen). Correct answers lead you to page 8 (“correct” screen) . Question 2: Same mechanic as question 1 . | Question 3: Same mechanic as question 1, except correct question takes you to completion page . | Incorrect Page: has a statement that tells the player they answered wrong and a button that takes you back to the introduction screen to start over (later changed) . | Completion Page: tells the player they finished the quiz . | Correct Page: lets the player know they answered correct, and are moving on to the next question. It has a button that takes you you to the next question . | Changes Made: . Orininally the incorrect page took you to the starting page and the player had to start the quiz over. Then I changed the code by adding adding an on event within the on event of an incorrect question so that the player was taken back to the question they got incorrect | The original code had a seperate correct page for each question. However eventually I managed to make it so that the same correct page takes the player to the next question. | . The Final Quiz: . My Quiz: https://studio.code.org/projects/applab/eGfXM6EyaxOBkUNorqCV1fBnQ0RoFWBOIEejLpPTXS0 . Ishi’s Quiz: https://studio.code.org/projects/applab/qQPEbjk6FhWvgxYMfkktJ0Jn5oBlid4l_6eo912qYC0 .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/markdown/2022/09/07/applabquiz.html",
            "relUrl": "/markdown/2022/09/07/applabquiz.html",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Looping Algorithms",
            "content": "defining dictionaries: . fruit = { &quot;bananas&quot;: 0.62, &quot;apples&quot;: 1.23, &quot;grapes&quot;: 2.24, &quot;strawberries&quot;: 1.37, &quot;oranges&quot;: 1.45 } #veg + their prices vegs = { &quot;potatoes&quot;: 0.78, &quot;tomatoes&quot;: 1.91, &quot;onions&quot;: 0.97, &quot;carrots&quot;: 0.49, &quot;bell peppers&quot;: 1.46 } #combines fruit and veg into one dictionary food = dict() food[&quot;fruit&quot;] = fruit food[&quot;vegs&quot;] = vegs print(&quot;fruit and their price:&quot; + str(fruit)) print(&quot;vegetables and their price:&quot; + str(vegs)) . fruit and their price:{&#39;bananas&#39;: 0.62, &#39;apples&#39;: 1.23, &#39;grapes&#39;: 2.24, &#39;strawberries&#39;: 1.37, &#39;oranges&#39;: 1.45} vegetables and their price:{&#39;potatoes&#39;: 0.78, &#39;tomatoes&#39;: 1.91, &#39;onions&#39;: 0.97, &#39;carrots&#39;: 0.49, &#39;bell peppers&#39;: 1.46} . for loop with index: . overall_price = 0 overall_price2 = 0 #for-loop for summing all values in the &#39;fruit&#39; dictionary for i in fruit: overall_price = overall_price + fruit[i] #for-loop for summing all values in the &#39;vegs&#39; dictionary for i in vegs: overall_price2 = overall_price2 + vegs[i] print(&quot;overall price of fruits: $&quot;, str(overall_price)) print(&quot;overall price of vegetables: $&quot;, str(overall_price2)) . overall price of fruits: $ 6.91 overall price of fruits: $ 5.61 . for loop (without index): . cart = [] for x in fruit: cart.append(x) #adds items from fruit print(&quot;your cart: &quot; + str(cart)) for x in vegs: cart.append(x) #adds items from vegetables print(&quot;your cart: &quot; + str(cart)) . your cart: [&#39;bananas&#39;, &#39;apples&#39;, &#39;grapes&#39;, &#39;strawberries&#39;, &#39;oranges&#39;] your cart: [&#39;bananas&#39;, &#39;apples&#39;, &#39;grapes&#39;, &#39;strawberries&#39;, &#39;oranges&#39;, &#39;potatoes&#39;, &#39;tomatoes&#39;, &#39;onions&#39;, &#39;carrots&#39;, &#39;bell peppers&#39;] .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/09/02/forloops.html",
            "relUrl": "/2022/09/02/forloops.html",
            "date": " • Sep 2, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Lists and Dictionaries Assignment",
            "content": "print(&quot;Hello. Which dog breed would you like to know about?&quot;) print(&quot;options: golden retriever, labrador, husky, border collie, german shepard&quot;) #golden retriever GoldR_DB = { &quot;Breed&quot;: &quot;Golden Retriever&quot;, &quot;Life span&quot;: &quot;10-12 years&quot;, &quot;Temperament&quot;: [&quot;Intelligent, Reliable, Kind, Trustworthy&quot;], &quot;Weight&quot;: &quot;55-75 lbs&quot;, &quot;Height&quot;: &quot;20-24 in&quot;, } #labrador Lab_DB = { &quot;Breed&quot;: &quot;Labrador&quot;, &quot;Life span&quot;: &quot;10-12 years&quot;, &quot;Temperament&quot;: [&quot;Outgoing, Agile, Intelligent, Trustworthy&quot;], &quot;Weight&quot;: &quot;55-71 lbs&quot;, &quot;Height&quot;: &quot;22-24 in&quot;, } #husky Husky_DB = { &quot;Breed&quot;: &quot;Husky&quot;, &quot;Life span&quot;: &quot;10-16 years&quot;, &quot;Temperament&quot;: [&quot;Loyal, Playful, Intelligent, Friendly&quot;], &quot;Weight&quot;: &quot;44-66 lbs&quot;, &quot;Height&quot;: &quot;22-24 in&quot;, } #border collie BordColl_DB = { &quot;Breed&quot; : &quot;Border Collie&quot;, &quot;Life span&quot; : &quot;10-17 years&quot;, &quot;Temperament&quot; : [&quot;Energetic, Keen, Alert, Athletic&quot;], &quot;Weight&quot;: &quot;27-45 lbs&quot;, &quot;Height&quot;: &quot;19-22 in&quot;, } #german shepard GermShep_DB = { &quot;Breed&quot; : &quot;German Shepard&quot;, &quot;Life Span&quot; : &quot;9-13 years&quot;, &quot;Temperament&quot; : [&quot;Stubborn, Confident, Courageous, Protective&quot;], &quot;Weight&quot; : &quot;49-71 lbs&quot;, &quot;Height&quot; : &quot;22-26 in&quot;, } def users_pick(prompt): msg = input() return msg #prints according to input rsp = users_pick(&quot;enter breed here:&quot;) if rsp == &quot;golden retriever&quot;: print(&quot; &quot;) print(&quot;Golden Retriever Info:&quot;) print(&quot; &quot;) for key, value in GoldR_DB.items(): print(key, &quot;:&quot;, value) elif rsp == &quot;labrador&quot;: print(&quot; &quot;) print(&quot;Labrador Info:&quot;) print(&quot; &quot;) for key, value in GoldR_DB.items(): print(key, &quot;:&quot;, value) elif rsp == &quot;husky&quot;: print(&quot; &quot;) print(&quot;Husky Info:&quot;) print(&quot; &quot;) for key, value in Husky_DB.items(): print(key, &quot;:&quot;, value) elif rsp == &quot;border collie&quot;: print(&quot; &quot;) print(&quot;Border Collie Info:&quot;) print(&quot; &quot;) for key, value in BordColl_DB.items(): print(key, &quot;:&quot;, value) elif rsp == &quot;german shepard&quot;: print(&quot; &quot;) print(&quot;German Shepard Info:&quot;) print(&quot; &quot;) for key, value in GermShep_DB.items(): print(key, &quot;:&quot;, value) else: print(&quot;error; please type in one of the given options&quot;) . Hello. Which dog breed would you like to know about? options: golden retriever, labrador, husky, border collie, german shepard error; please type in one of the options .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/08/30/dogdatabase.html",
            "relUrl": "/2022/08/30/dogdatabase.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Quiz",
            "content": "import getpass, sys print(&quot;Welcome to the Frog quiz!&quot;) print(&quot;You will be given three questions&quot;) score = 0 def testing(input, answer, score): if input == answer: score = score + 1 print(&quot;correct!&quot;) return score else: print(&quot;wrong answer&quot;) print(&quot;Question 1: How many toes does a poison dart frog have on each foot?&quot;) score1 = testing(input(), &quot;4&quot;, score) print(&quot;How many species of frog are there?&quot;) score2 = testing(input(), &quot;5000&quot;, score) print(&quot;Can a frog play the violin?&quot;) score3 = testing(input(), &quot;no&quot;, score) score = score1 + score2 + score3 print(score) . Welcome to the Frog quiz! You will be given 3 questions Question 1: How many toes does a poison dart frog have on each foot? correct! How many species of frog are there? wrong answer Can a frog play the violin? correct! . TypeError Traceback (most recent call last) /Users/ekamjotkaire/Desktop/fast-pages/_notebooks/2022-08-29-quiz.ipynb Cell 1 in &lt;cell line: 22&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/ekamjotkaire/Desktop/fast-pages/_notebooks/2022-08-29-quiz.ipynb#W0sZmlsZQ%3D%3D?line=18&#39;&gt;19&lt;/a&gt; print(&#34;Can a frog play the violin?&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/ekamjotkaire/Desktop/fast-pages/_notebooks/2022-08-29-quiz.ipynb#W0sZmlsZQ%3D%3D?line=19&#39;&gt;20&lt;/a&gt; score3 = testing(input(), &#34;no&#34;, score) &gt; &lt;a href=&#39;vscode-notebook-cell:/Users/ekamjotkaire/Desktop/fast-pages/_notebooks/2022-08-29-quiz.ipynb#W0sZmlsZQ%3D%3D?line=21&#39;&gt;22&lt;/a&gt; score = score1 + score2 + score3 &lt;a href=&#39;vscode-notebook-cell:/Users/ekamjotkaire/Desktop/fast-pages/_notebooks/2022-08-29-quiz.ipynb#W0sZmlsZQ%3D%3D?line=22&#39;&gt;23&lt;/a&gt; print(score) TypeError: unsupported operand type(s) for +: &#39;int&#39; and &#39;NoneType&#39; .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/08/29/quiz.html",
            "relUrl": "/2022/08/29/quiz.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Title",
            "content": "",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/08/29/quiz-jvsc-f0fab26d-69b0-4946-9f3b-220b59176d14d482df6c-f3cd-4968-92f4-32dd514c6c7b.html",
            "relUrl": "/2022/08/29/quiz-jvsc-f0fab26d-69b0-4946-9f3b-220b59176d14d482df6c-f3cd-4968-92f4-32dd514c6c7b.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Alumni Panel Notes",
            "content": "Alumni Panel Notes . Takeaways: . I originally took this class because I thought coding would be a niche skill that would be usefull in some cases but not that often. I am not planning on taking a career in CS in the future, so I was not that interested in learning code. However, during this meeting I realized that not only can the coding I learn be used in any field, but also the problem solving skills I develop | I also had been struggling during the first couple weeks in this class. I kept running into problems I didn’t how how to solve, and even when I solved them I was not sure how I did it. However, based on what the alumnis said, I learned CS is not as straightforward as other subjects. And there are answers on the internet for everything I come across, and I just need to have the perseverance and motivation to work through it | Coding is not just writing predetermined code, but requries creative thinking, and not every solution will be obvious | Most of the time I will find the best help within my team | Don’t be discouraged by others doing better, because everyone’s learning curve is different. At the same time, don’t take too much pride in your achievements | . Notes I took during the meeting: . How did you realize you wanna take your major and how did taking CSA and CSP help? . Hoped to get better at CS | Loved problem solving | Started from a young age | The ability to create new things using code | Like the complexity and being able to understand computers on another level | Didn’t necessarily like CS but realized its an important tool that is helpful to learn regardless of what field you are going into | Helps with web design | . Biggest challenges in CSP: . The beginning is difficult, but keeping your motivation is important to be able to overcome challenges | There is an answer somewhere on the internet | Stay humble, but don’t be discouraged | Going from high school CS to college CS is a lot different | Have a specific project to apply what you learn to | Google has a lot of answers | Temptation to find short-cuts and cut corners | There’s not always a rigid structure, things might be a little messy | . Project Based Learning: . Many CS classes have a project component | In larger (college) classes, teachers don’t have the time to give individual attention – form groups so that you can work through your problems together . | There are a lot of repetitive tasks that can made much more efficient using code | Coding is used everywhere | A lot of problem solving skills (not necessarily related to coding) | . Internships: . Have a resume | Apply in setp-nov | Ask small, local companies – their more likely to accept high schoolers | .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/markdown/2022/08/29/AlumniPanel.html",
            "relUrl": "/markdown/2022/08/29/AlumniPanel.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Tools installation",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section ekam export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSA # change APCSA to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSA.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . evalmachine.&lt;anonymous&gt;:1 echo &#34;Using conditional statement to create a project directory and project&#34; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SyntaxError: Unexpected string at new Script (vm.js:79:7) at createScript (vm.js:251:10) at Object.runInThisContext (vm.js:303:10) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at process.emit (events.js:182:13) at emit (internal/child_process.js:812:12) at process._tickCallback (internal/process/next_tick.js:63:19) . lis (ls) . ls is used to list all the directories in the main directory. ls -a is used to list all the hidden files . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags cd /home/ekamjotkaire/vscode/fast-pages/ echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Input In [11] echo &#34;Navigate to project, then navigate to area wwhere files were cloned&#34; ^ SyntaxError: invalid syntax . all the posts appear . ls -l does this function, as cd is set to the posts folder . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory cd /home/ekamjotkaire/vscode/fast-pages/_posts ls -l # list posts . Input In [9] echo &#34;Look for posts&#34; ^ SyntaxError: invalid syntax . All the notebook files appear . ls -l does this function, as cd is set to the notebooks folder . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory cd /home/ekamjotkaire/vscode/fast-pages/_notebooks ls -l # list notebooks . Look for notebooks bash: cd: /_notebooks: No such file or directory /home/ekamjotkaire/vscode/fast-pages/_notebooks bash: cd: /home/ekamjotkaire/vscode/fast-pages/_notebooks: No such file or directory total 3144 -rw-r--r-- 1 ekamjotkaire ekamjotkaire 3162470 Aug 21 19:36 2020-02-20-test.ipynb -rw-r--r-- 1 ekamjotkaire ekamjotkaire 888 Aug 24 10:16 2022-08-20-java.ipynb -rw-r--r-- 1 ekamjotkaire ekamjotkaire 941 Aug 23 22:26 2022-08-20-python.ipynb -rw-r--r-- 1 ekamjotkaire ekamjotkaire 4288 Aug 25 22:57 2022-08-24-score_calculator.ipynb -rw-r--r-- 1 ekamjotkaire ekamjotkaire 23435 Aug 25 23:18 2022-08-25-bash_kernel.ipynb -rw-r--r-- 1 ekamjotkaire ekamjotkaire 771 Aug 21 19:36 README.md drwxr-xr-x 2 ekamjotkaire ekamjotkaire 4096 Aug 21 19:36 ghtop_images drwxr-xr-x 2 ekamjotkaire ekamjotkaire 4096 Aug 21 19:36 my_icons . This returns the contents in the read me file . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown cd /home/ekamjotkaire/vscode/fast-pages/README.md echo &quot;&quot; echo &quot;end of README.md&quot; . Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md cat: README.md: No such file or directory bash: cd: /home/ekamjotkaire/vscode/fast-pages/README.md: No such file or directory end of README.md . env . env command is for the enviroment. It returns all the environments that have been set up. We can check whether all the required environments have been set. . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . Show the shell environment variables, key on left of equal value on right SHELL=/bin/bash PYTHONUNBUFFERED=1 project=/home/ekamjotkaire/vscode/APCSA CONDA_EXE=/home/ekamjotkaire/anaconda3/bin/conda _CE_M= WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=Code PWD=/home/ekamjotkaire/vscode/APCSA LOGNAME=ekam CONDA_PREFIX=/home/ekamjotkaire/anaconda3 MOTD_SHOWN=update-motd project_dir=/home/ekamjotkaire/vscode HOME=/home/ekamjotkaire LANG=C.UTF-8 WSL_INTEROP=/run/WSL/8_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: WAYLAND_DISPLAY=wayland-0 CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/home/ekamjotkaire/vscode/APCSA/_posts LESSCLOSE=/usr/bin/lesspipe %s %s VSCODE_HANDLES_SIGPIPE=true TERM=xterm-256color _CE_CONDA= LESSOPEN=| /usr/bin/lesspipe %s USER=divya PYTHONIOENCODING=utf-8 notebooks=/home/divya/vscode/APCSA/_notebooks CONDA_SHLVL=1 DISPLAY=:0 SHLVL=2 PAGER=cat project_repo=https://github.com/nighthawkcoders/APCSA.git VSCODE_CWD=/mnt/c/ekamjotkaire CONDA_PYTHON_EXE=/home/ekamjotkaire/anaconda3/bin/python XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir PS1=[PEXP [ ]ECT_PROMPT&gt; CONDA_DEFAULT_ENV=base WSLENV=ELECTRON_RUN_AS_NODE/w: VSCODE_WSL_EXT_LOCATION=/mnt/c/Users/prash/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3 XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop PATH=/home/ekamjotkaire/.vscode-server/bin/e4503b30fc78200f846c62cf8091b76ff5547662/bin/remote-cli:/home/ekamjotkaire/.local/bin:/home/ekamjotkaire/anaconda3/bin:/home/divya/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0:/mnt/c/WINDOWS/System32/OpenSSH:/mnt/c/Users/prash/AppData/Local/Microsoft/WindowsApps:/mnt/c/Aadya/bin:/snap/bin VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en&#34;,&#34;availableLanguages&#34;:{}} HOSTTYPE=x86_64 PULSE_SERVER=/mnt/wslg/PulseServer VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/ekamjotkaire/vscode/APCSA/_notebooks VSCODE_IPC_HOOK_CLI=/mnt/wslg/runtime-dir/vscode-ipc-d123d553-5453-4217-b8bb-4bfec6326687.sock _=/usr/bin/env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . show the secrets of .git total 60 -rw-r--r-- 1 ekamjotkaire ekamjotkaire 23 Aug 25 23:11 HEAD drwxr-xr-x 2 ekamjotkaire ekamjotkaire 4096 Aug 25 23:11 branches -rw-r--r-- 1 ekamjotkaire ekamjotkaire 269 Aug 25 23:11 config -rw-r--r-- 1 ekamjotkaire ekamjotkaire 73 Aug 25 23:11 description drwxr-xr-x 2 ekamjotkaire ekamjotkaire 4096 Aug 25 23:11 hooks -rw-r--r-- 1 ekamjotkaire ekamjotkaire 20422 Aug 25 23:11 index drwxr-xr-x 2 ekamjotkaire ekamjotkaire 4096 Aug 25 23:11 info drwxr-xr-x 3 ekamjotkaire ekamjotkaire 4096 Aug 25 23:11 logs drwxr-xr-x 4 ekamjotkaire ekamjotkaire 4096 Aug 25 23:11 objects -rw-r--r-- 1 ekamjotkaire ekamjotkaire 271 Aug 25 23:11 packed-refs drwxr-xr-x 5 ekamjotkaire ekamjotkaire 4096 Aug 25 23:11 refs look at config file [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true [remote &#34;origin&#34;] url = https://github.com/nighthawkcoders/APCSA.git fetch = +refs/heads/*:refs/remotes/origin/* [branch &#34;master&#34;] remote = origin merge = refs/heads/master .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/08/28/toolinstallation.html",
            "relUrl": "/2022/08/28/toolinstallation.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Python Usage",
            "content": "print(&quot;hello world&quot;) score = 0 def testing(input, answer, score): if input == answer: score = score + 1 print(&quot;correct!&quot;) return score else: print(&quot;wrong answer&quot;) score1 = testing(input(), &quot;hello&quot;, score) score2 = testing(input(), &quot;bye&quot;, score) score = score1 + score2 print(score) . hello world correct! correct! 2 .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/08/24/python-notebook-test.html",
            "relUrl": "/2022/08/24/python-notebook-test.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Title",
            "content": "",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/08/24/python-notebook-test-jvsc-c27a0b0b-5f63-46da-9b02-6783030e4b3bf48a6ed9-2374-41a0-99e4-c6aafffb2732.html",
            "relUrl": "/2022/08/24/python-notebook-test-jvsc-c27a0b0b-5f63-46da-9b02-6783030e4b3bf48a6ed9-2374-41a0-99e4-c6aafffb2732.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Title",
            "content": "",
            "url": "https://ekamjot-kaire.github.io/fast-pages/2022/08/24/python-notebook-test-jvsc-9a61fca0-e90c-47ce-9230-abe8203715324eeb2f9b-e8eb-4d84-bc5f-3bbfe6e125ff.html",
            "relUrl": "/2022/08/24/python-notebook-test-jvsc-9a61fca0-e90c-47ce-9230-abe8203715324eeb2f9b-e8eb-4d84-bc5f-3bbfe6e125ff.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "First Markdown Post",
            "content": "Markdown . This is my first post .",
            "url": "https://ekamjot-kaire.github.io/fast-pages/week%200/2022/08/23/first-post.html",
            "relUrl": "/week%200/2022/08/23/first-post.html",
            "date": " • Aug 23, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Name: Ekam Kaire . (she/her) .",
          "url": "https://ekamjot-kaire.github.io/fast-pages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "JavaScript Jupyter",
          "content": "link to JavaScript Table: https://ekamjot-kaire.github.io/fast-pages/2022/09/28/javascipt-table.html link to personal usage of JavaScript: https://ekamjot-kaire.github.io/fast-pages/2022/09/26/javascriptusage.html .",
          "url": "https://ekamjot-kaire.github.io/fast-pages/java/",
          "relUrl": "/java/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
      ,"page8": {
          "title": "",
          "content": "",
          "url": "https://ekamjot-kaire.github.io/fast-pages/temp",
          "relUrl": "/temp",
          "date": ""
      }
      
  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://ekamjot-kaire.github.io/fast-pages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}